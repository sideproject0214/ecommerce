FROM node:19.4-alpine3.16 AS builder

# 작업폴더를 정해준다. 이후 작업은 여기서 진행된다.
WORKDIR /app

# package-lock까지 복사하여 개발환경과 동일한 환경을 설정한다.
COPY ./package*.json ./

RUN npm i 

COPY ./ ./

RUN npm run build

# step 2. 실행 스테이지를 위한 과정
FROM nginx:1.23-alpine



# nginx 의 default.conf 를 삭제
RUN rm -rf  /etc/nginx/conf.d


# host container의 nginx.conf 를 /etc/nginx 폴더에 복사
# 작업폴더는 client 폴더임을 명심

COPY  ./nginx /etc/nginx/conf.d
# COPY ./config/nginx /etc/nginx 실패한 빌드

# Multi Stage Build 사용
# 도커의 각 명령은 각각 계층을 만드는데 --from=build는 이전 아티팩트를 가져온다
# build는 위 별칭을 의미한다
# 전 아티팩트의 /app/build 폴더에서 /usr/share/nginx/html 로 파일을 복사

# WORKDIR 기준으로 경로를 작성 한다
WORKDIR /root/

COPY --from=builder ./app/dist /usr/share/nginx/html



